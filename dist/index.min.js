'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var ethjsProviderSigner = _interopDefault(require('ethjs-provider-signer'));
var ethjsSigner = _interopDefault(require('ethjs-signer'));
var get = _interopDefault(require('lodash/fp/get'));
var invariant = _interopDefault(require('fbjs/lib/invariant'));
var bignumber = _interopDefault(require('bignumber.js'));
var truffleContract = _interopDefault(require('truffle-contract'));
var lodash = _interopDefault(require('lodash'));
var web3 = _interopDefault(require('web3'));
var buffer = _interopDefault(require('buffer'));
var scryptAsync = _interopDefault(require('scrypt-async'));
var jsSha3 = _interopDefault(require('js-sha3'));
var browserifyAes = _interopDefault(require('browserify-aes'));

const sign=ethjsSigner.sign;var providerFactory=function(a,b){let c;const d=(a)=>sign(a,c,!1),e=new ethjsProviderSigner(a,{signTransaction:(a,b)=>b(null,d(a,!1)),accounts:(a)=>a(null,[b])});return e.setPrivateKey=function(a){c=a;},e};

var _slicedToArray=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a;}finally{try{!d&&h['return']&&h['return']();}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}();const MINUTE=60000; const MAX_TIMEOUT=10*MINUTE;class TxResult{constructor(a,b,c=null){if(this._geth=b,this._receipt=null,this._hash=null,this._promise=null,null!==c&&this.validateTxParams(c),this._txParams=c,a instanceof TxResult)this._copyCtr(a);else if(a instanceof Promise)this._promise=a.then((a)=>this._processPromiseResult(a));else if(TxResult.checkTxHash(a))this._hash=a;else throw new Error('Unknown transaction src')}_copyCtr(a){a._hash?this._hash=a._hash:this._promise=a._promise.then((a)=>this._processPromiseResult(a));}_processPromiseResult(a){TxResult.checkTxHash(a)?this._hash=a:a&&TxResult.checkTxReceipt(a.receipt)&&(this._receipt=a.receipt,this._hash=a.receipt.transactionHash);}static checkTxHash(a){return'string'==typeof a&&a.startsWith('0x')}static checkTxReceipt(a){return a instanceof Object&&'cumulativeGasUsed'in a}async getHash(){return await this._promise,this._hash}async getTransaction(){return null===this._txParams&&(this._txParams=await this._geth.method('getTransaction')((await this.getHash())),this.validateTxParams(this._txParams)),this._txParams}validateTxParams(a){if(!('object'==typeof a&&'gasPrice'in a))throw new Error('incorrect txParams')}async getTxPrice(){const a=await this.getReceipt(),b=await this.getTransaction();return new bignumber(b.gasPrice).mul(a.gasUsed)}async getConfirmationsCount(){var a=await Promise.all([this.getReceipt(),this._geth.method('getBlockNumber')()]),b=_slicedToArray(a,2);const c=b[0],d=b[1];return d>c.blockNumber?d-c.blockNumber:0}async getReceipt(){let a;if(await this._promise,!this._receipt){const a=await this.getHash(),b=new Promise((b,c)=>{const d=setTimeout(()=>c(`getReceipt timeout: ${MAX_TIMEOUT}`),MAX_TIMEOUT),e=async()=>{const c=await this._geth.method('getTransactionReceipt')(a);c?(clearTimeout(d),b(c)):setTimeout(e,this._getPollingInterval());};e();});await b.then((a)=>this._receipt=a);}return a=this._receipt,a}_getPollingInterval(){const a=Date.now()-this.timestamp,b=a>MINUTE?MINUTE:1e3;return b}async getInfo(){return this._geth.method('getTransaction')((await this.getHash()))}}var TransactionResult=TxResult;

var toHex=function(a){let b;return b='string'==typeof a&&a.startsWith('0x')?a:'0x'+new bignumber(a).toString(16),b};

var contract_name="SNMT";var abi=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"INITIAL_SUPPLY",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_subtractedValue",type:"uint256"}],name:"decreaseApproval",outputs:[{name:"success",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"target",type:"address"},{name:"mintedAmount",type:"uint256"}],name:"mintToken",outputs:[],payable:!1,type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!1,inputs:[],name:"getTokens",outputs:[],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_addedValue",type:"uint256"}],name:"increaseApproval",outputs:[{name:"success",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,type:"function"},{inputs:[],payable:!1,type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];var unlinked_binary="0x606060405260408051908101604052601281527f534f4e4d20546573746e657420546f6b656e00000000000000000000000000006020820152600490805161004b9291602001906100f4565b5060408051908101604052600481527f534e4d5400000000000000000000000000000000000000000000000000000000602082015260059080516100939291602001906100f4565b50601260065569152d02c7e14af680000060075534156100b257600080fd5b5b5b60038054600160a060020a03191633600160a060020a03161790555b6007546000818155600160a060020a0330168152600160205260409020555b610194565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061013557805160ff1916838001178555610162565b82800160010185558215610162579182015b82811115610162578251825591602001919060010190610147565b5b5061016f929150610173565b5090565b61019191905b8082111561016f5760008155600101610179565b5090565b90565b610c8c806101a36000396000f300606060405236156100e35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100e8578063095ea7b31461017357806318160ddd146101a957806323b872dd146101ce5780632ff2e9dc1461020a578063313ce5671461022f578063661884631461025457806370a082311461028a57806379c65068146102bb5780638da5cb5b146102df57806395d89b411461030e578063a9059cbb14610399578063aa6ca808146103cf578063d73dd623146103e4578063dd62ed3e1461041a578063f2fde38b14610451575b600080fd5b34156100f357600080fd5b6100fb610472565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101385780820151818401525b60200161011f565b50505050905090810190601f1680156101655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017e57600080fd5b610195600160a060020a0360043516602435610510565b604051901515815260200160405180910390f35b34156101b457600080fd5b6101bc61057d565b60405190815260200160405180910390f35b34156101d957600080fd5b610195600160a060020a0360043581169060243516604435610583565b604051901515815260200160405180910390f35b341561021557600080fd5b6101bc61069d565b60405190815260200160405180910390f35b341561023a57600080fd5b6101bc6106a3565b60405190815260200160405180910390f35b341561025f57600080fd5b610195600160a060020a03600435166024356106a9565b604051901515815260200160405180910390f35b341561029557600080fd5b6101bc600160a060020a03600435166107a5565b60405190815260200160405180910390f35b34156102c657600080fd5b6102dd600160a060020a03600435166024356107c4565b005b34156102ea57600080fd5b6102f2610864565b604051600160a060020a03909116815260200160405180910390f35b341561031957600080fd5b6100fb610873565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101385780820151818401525b60200161011f565b50505050905090810190601f1680156101655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103a457600080fd5b610195600160a060020a0360043516602435610911565b604051901515815260200160405180910390f35b34156103da57600080fd5b6102dd6109d6565b005b34156103ef57600080fd5b610195600160a060020a0360043516602435610aa4565b604051901515815260200160405180910390f35b341561042557600080fd5b6101bc600160a060020a0360043581169060243516610b49565b60405190815260200160405180910390f35b341561045c57600080fd5b6102dd600160a060020a0360043516610b76565b005b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b505050505081565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60005481565b600080600160a060020a038416151561059b57600080fd5b50600160a060020a038085166000818152600260209081526040808320339095168352938152838220549282526001905291909120546105e1908463ffffffff610c0f16565b600160a060020a038087166000908152600160205260408082209390935590861681522054610616908463ffffffff610c2616565b600160a060020a03851660009081526001602052604090205561063f818463ffffffff610c0f16565b600160a060020a0380871660008181526002602090815260408083203386168452909152908190209390935590861691600080516020610c418339815191529086905190815260200160405180910390a3600191505b509392505050565b60075481565b60065481565b600160a060020a0333811660009081526002602090815260408083209386168352929052908120548083111561070657600160a060020a03338116600090815260026020908152604080832093881683529290529081205561073d565b610716818463ffffffff610c0f16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a3600191505b5092915050565b600160a060020a0381166000908152600160205260409020545b919050565b60035433600160a060020a039081169116146107df57600080fd5b600160a060020a0380831660009081526001602052604080822080548501905581548401825560035490921691600080516020610c418339815191529084905190815260200160405180910390a3600354600160a060020a038084169116600080516020610c418339815191528360405190815260200160405180910390a35b5b5050565b600354600160a060020a031681565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b505050505081565b6000600160a060020a038316151561092857600080fd5b600160a060020a033316600090815260016020526040902054610951908363ffffffff610c0f16565b600160a060020a033381166000908152600160205260408082209390935590851681522054610986908363ffffffff610c2616565b600160a060020a038085166000818152600160205260409081902093909355913390911690600080516020610c418339815191529085905190815260200160405180910390a35060015b92915050565b600160a060020a0330166000908152600160205260409020546127109081901015610a0057610aa1565b600160a060020a03331660009081526001602052604090205462030d409010610a2857600080fd5b600160a060020a033016600090815260016020526040902054610a51908263ffffffff610c0f16565b600160a060020a03308116600090815260016020526040808220939093553390911681522054610a87908263ffffffff610c2616565b600160a060020a0333166000908152600160205260409020555b50565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610adc908363ffffffff610c2616565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a35060015b92915050565b600160a060020a038083166000908152600260209081526040808320938516835292905220545b92915050565b60035433600160a060020a03908116911614610b9157600080fd5b600160a060020a0381161515610ba657600080fd5b600354600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b600082821115610c1b57fe5b508082035b92915050565b600082820183811015610c3557fe5b8091505b50929150505600ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a7230582007bff83baeff7dc0e08d6b570a98cb8468e6ec4818642a574c080be753d430d40029";var networks={4:{events:{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}},links:{},address:"0xcafc68d01c6b1a70206938a7dfa40cfc80781efe",updated_at:1506598783329},1506596317186:{events:{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}},links:{},address:"0x7c6c4a8dfdfbe3bad7b0877f118294e6570b4529",updated_at:1506596321888},1506596389844:{events:{"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925":{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef":{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}},links:{},address:"0x6d601f11dd6edbecc3736a4788a945682e8d88cf",updated_at:1506597282623}};var schema_version="0.0.5";var updated_at=1506598783329;var SNMT = {contract_name:contract_name,abi:abi,unlinked_binary:unlinked_binary,networks:networks,schema_version:schema_version,updated_at:updated_at};

var SNMT$1 = Object.freeze({
	contract_name: contract_name,
	abi: abi,
	unlinked_binary: unlinked_binary,
	networks: networks,
	schema_version: schema_version,
	updated_at: updated_at,
	default: SNMT
});

var contract_name$1="VotingRegistry";var abi$1=[{constant:!0,inputs:[],name:"getVotings",outputs:[{name:"",type:"address[]"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"numberOfVoting",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{name:"",type:"address"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_votingAddress",type:"address"}],name:"addVoting",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"",type:"uint256"}],name:"votings",outputs:[{name:"",type:"address"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,type:"function"},{anonymous:!1,inputs:[{indexed:!1,name:"_votingAddress",type:"address"},{indexed:!1,name:"id",type:"uint256"}],name:"VotingAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}];var unlinked_binary$1="0x60606040525b60008054600160a060020a03191633600160a060020a03161790555b5b610456806100316000396000f300606060405236156100755763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166305c1112d811461007a578063213bb560146100e15780638da5cb5b14610106578063988574fb14610135578063a598d03c14610166578063f2fde38b14610198575b600080fd5b341561008557600080fd5b61008d6101b9565b60405160208082528190810183818151815260200191508051906020019060200280838360005b838110156100cd5780820151818401525b6020016100b4565b505050509050019250505060405180910390f35b34156100ec57600080fd5b6100f4610222565b60405190815260200160405180910390f35b341561011157600080fd5b610119610228565b604051600160a060020a03909116815260200160405180910390f35b341561014057600080fd5b6100f4600160a060020a0360043516610237565b60405190815260200160405180910390f35b341561017157600080fd5b610119600435610302565b604051600160a060020a03909116815260200160405180910390f35b34156101a357600080fd5b6101b7600160a060020a0360043516610334565b005b6101c16103cd565b600280548060200260200160405190810160405280929190818152602001828054801561021757602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116101f9575b505050505090505b90565b60015481565b600054600160a060020a031681565b60008054819033600160a060020a0390811691161461025557600080fd5b600280549061026790600183016103df565b90508260028281548110151561027957fe5b906000526020600020900160005b6101000a815481600160a060020a030219169083600160a060020a03160217905550806001016001819055507fc907cbef866338602982866ab690654800e270cbf2044eb49b28438fadbf319d8382604051600160a060020a03909216825260208201526040908101905180910390a18091505b5b50919050565b600280548290811061031057fe5b906000526020600020900160005b915054906101000a9004600160a060020a031681565b60005433600160a060020a0390811691161461034f57600080fd5b600160a060020a038116151561036457600080fd5b600054600160a060020a0380831691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b5b50565b60206040519081016040526000815290565b81548183558181151161040357600083815260209020610403918101908301610409565b5b505050565b61021f91905b80821115610423576000815560010161040f565b5090565b905600a165627a7a72305820a22865cf809e8a29b756ebbfb410634e357ea15f08118ff175e83cc175ae35790029";var networks$1={1510581448957:{events:{"0xc907cbef866338602982866ab690654800e270cbf2044eb49b28438fadbf319d":{anonymous:!1,inputs:[{indexed:!1,name:"_votingAddress",type:"address"},{indexed:!1,name:"id",type:"uint256"}],name:"VotingAdded",type:"event"},"0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0":{anonymous:!1,inputs:[{indexed:!0,name:"previousOwner",type:"address"},{indexed:!0,name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},links:{},address:"0x6c93dca2af0324fd7bfdf21f1d60684bd7e4b6a6",updated_at:1510582252207}};var schema_version$1="0.0.5";var updated_at$1=1510582252207;var VotingRegistry = {contract_name:contract_name$1,abi:abi$1,unlinked_binary:unlinked_binary$1,networks:networks$1,schema_version:schema_version$1,updated_at:updated_at$1};

var VotingRegistry$1 = Object.freeze({
	contract_name: contract_name$1,
	abi: abi$1,
	unlinked_binary: unlinked_binary$1,
	networks: networks$1,
	schema_version: schema_version$1,
	updated_at: updated_at$1,
	default: VotingRegistry
});

var contract_name$2="Voting";var abi$2=[{constant:!0,inputs:[],name:"getDescription",outputs:[{name:"",type:"string"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"getEndTime",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"voter",type:"address"},{name:"optionId",type:"uint256"}],name:"getBalanceFor",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!1,inputs:[{name:"_optionId",type:"uint256"}],name:"voteFor",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!1,inputs:[],name:"withdrawTokens",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"isFinishedAheadOfTime",outputs:[{name:"",type:"bool"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"getNumberOfOptions",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"voter",type:"address"}],name:"getBalanceOf",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_optionId",type:"uint256"}],name:"getTitleFor",outputs:[{name:"",type:"string"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"getWinnerOption",outputs:[{name:"",type:"bool"},{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_optionId",type:"uint256"}],name:"getWeightsFor",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"getStartTime",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_optionId",type:"uint256"}],name:"getVotesFor",outputs:[{name:"",type:"uint256"}],payable:!1,type:"function"},{constant:!0,inputs:[{name:"_optionId",type:"uint256"}],name:"getDescriptionFor",outputs:[{name:"",type:"string"}],payable:!1,type:"function"},{constant:!0,inputs:[],name:"getTitle",outputs:[{name:"",type:"string"}],payable:!1,type:"function"}];var unlinked_binary$2="0x";var networks$2={};var schema_version$2="0.0.5";var updated_at$2=1510582251797;var Voting = {contract_name:contract_name$2,abi:abi$2,unlinked_binary:unlinked_binary$2,networks:networks$2,schema_version:schema_version$2,updated_at:updated_at$2};

var Voting$1 = Object.freeze({
	contract_name: contract_name$2,
	abi: abi$2,
	unlinked_binary: unlinked_binary$2,
	networks: networks$2,
	schema_version: schema_version$2,
	updated_at: updated_at$2,
	default: Voting
});

var contractToken = ( SNMT$1 && SNMT ) || SNMT$1;

var contractVotingRegistry = ( VotingRegistry$1 && VotingRegistry ) || VotingRegistry$1;

var contractVoting = ( Voting$1 && Voting ) || Voting$1;

const contracts={token:contractToken,votingRegistry:contractVotingRegistry,voting:contractVoting};var initContract=async function(a,b){invariant(b,'gethClient is not defined'),invariant(a,'set current contract name');const c=truffleContract(contracts[a]);return c.setProvider(b.provider),c};

var _slicedToArray$1=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a;}finally{try{!d&&h['return']&&h['return']();}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}();var checkToken=async function(a,b){invariant(a,'address is not defined'),invariant(a.startsWith('0x'),'address should starts with 0x'),invariant(b,'gethClient is not defined');try{if('0x'!==(await b.method('getCode')(a))){const e=await initContract('token',b),f=await e.at(a);var c=await Promise.all([f.name(),f.symbol(),f.decimals()]),d=_slicedToArray$1(c,3);const g=d[0],h=d[1],i=d[2];return{name:g,symbol:h,decimals:i,address:a,contract:f}}return!1}catch(a){return console.log(a.stack),!1}};

const getBalance=get('c[0]'); const GAS_LIMIT_DEFAULT=2e5; const GAS_PRICE_MAX=new bignumber(1e11);class Account{constructor({gethClient:a,address0x:b,limitGasPrice:c=GAS_PRICE_MAX,throwGasPriceError:d=!1}){invariant(a,'gethClient is not defined'),invariant(b,'address is not defined'),invariant(b.startsWith('0x'),'address should starts with 0x'),this.throwGasPriceError=d,this.limitGasPrice=new bignumber(c),this.geth=a,this.address=b,this.tokens={};}async addToken(a){const b=await checkToken(a,this.geth);return!!b&&void(this.tokens[b.symbol.toLowerCase()]=b)}async getBalances(){let a={eth:await this.getBalance()};for(const b in this.tokens)a[b]=(await this.getTokenBalance(b)).toString();return a}async getCurrencyBalances(){let a={"0x":await this.getBalance()};for(const b in this.tokens)a[this.tokens[b].address]=(await this.getTokenBalance(b)).toString();return a}async getCurrencies(){let a=[{address:'0x',symbol:'ETH',name:'Ethereum'}];for(const b in this.tokens){const c=this.tokens[b];a.push({symbol:c.symbol.toUpperCase(),address:c.address,name:c.name});}return a}async getBalance(){const a=await this.geth.method('getBalance')(this.getAddress());return a?a+'':a}async getTokenBalance(a='snmt'){const b=await this.tokens[a].contract.balanceOf(this.address);return getBalance(b)}getAddress(){return this.address}getGasLimit(){return GAS_LIMIT_DEFAULT}async getGasPrice(){let a=await this.geth.method('getGasPrice')();if(a.gt(this.limitGasPrice)){if(this.throwGasPriceError)throw new Error('Too much gas price '+a.toFormat());a=GAS_PRICE_MAX;}return a}async sendTokens(a,b,c='snmt'){const d=toHex(b),e=toHex((await this.getGasLimit())),f=toHex((await this.getGasPrice())),g=this.tokens[c].contract.transfer(this.normalizeTarget(a),d,{from:this.getAddress(),gasLimit:e,gasPrice:f});return new TransactionResult(g,this.geth)}async sendEther(a,b){const c=toHex((await this.getGasLimit())),d=toHex((await this.getGasPrice())),e=toHex(b),f={from:this.getAddress(),gasLimit:c,gasPrice:d,value:e,to:this.normalizeTarget(a)};return this.geth.sendTransaction(f)}normalizeTarget(a){return a instanceof Account?a.address:a}}var Account_1=Account;

var _slicedToArray$2=function(){function a(a,b){var c=[],d=!0,e=!1,f=void 0;try{for(var g,h=a[Symbol.iterator]();!(d=(g=h.next()).done)&&(c.push(g.value),!(b&&c.length===b));d=!0);}catch(a){e=!0,f=a;}finally{try{!d&&h['return']&&h['return']();}finally{if(e)throw f}}return c}return function(b,c){if(Array.isArray(b))return b;if(Symbol.iterator in Object(b))return a(b,c);throw new TypeError('Invalid attempt to destructure non-iterable instance')}}();class Votes{constructor({account:a,config:b}){invariant(a,'account is not defined'),this._accountAddress=a.getAddress(),this._geth=a.geth,this._gasLimit=a.getGasLimit(),this._token=a.tokens.snmt,this._votes={},this._votesInfo={},this._currentVote=0,this._config=b;}async init(){if(this._registry=await initContract('votingRegistry',this._geth),this._registry=await this._registry.at(this._config.contractAddress.votingRegistry),this._voting=await initContract('voting',this._geth),0===Object.keys(this._votes).length){const a=await this._registry.getVotings();for(const b of a)this._votes[b]=await this._voting.at(b);}return!0}async getList(){for(const a in this._votes)await this.getVoteInfo(a);return lodash.values(this._votesInfo)}setCurrent(a){this._currentVote=a;}getCurrent(){return this._currentVote}async getVoteInfo(a=null,b=!0){if(a=a||this.getCurrent(),!this._votesInfo[a]||!b){var c=await Promise.all([this._votes[a].getTitle(),this._votes[a].getDescription(),this._votes[a].getStartTime(),this._votes[a].getEndTime(),this._votes[a].isFinishedAheadOfTime(),this._votes[a].getWinnerOption()]),d=_slicedToArray$2(c,6);const b=d[0],e=d[1],f=d[2],g=d[3],h=d[4],i=d[5];this._votesInfo[a]={address:a,title:b,description:e,starttime:lodash.get(f,'c[0]'),endtime:lodash.get(g,'c[0]'),finishedAheadTime:h,winner:i,options:[]};}return this._votesInfo[a]}async getVoteFullInfo(a=!1){const b=this._votes[this.getCurrent()];var c=await Promise.all([this.getVoteInfo(this.getCurrent(),a),b.getNumberOfOptions()]),d=_slicedToArray$2(c,2);const e=d[0],f=d[1];e.options=[];for(let c=0;c<f.toNumber();c++){var g=await Promise.all([b.getTitleFor(c),b.getDescriptionFor(c),b.getVotesFor(c),b.getWeightsFor(c)]),h=_slicedToArray$2(g,4);const a=h[0],d=h[1],f=h[2],j=h[3];e.options.push({index:c,title:a,description:d,votes:f.toNumber(),weight:j.toNumber()});}return e}async vote(a,b=1){const c=this._votes[this.getCurrent()],d=this.getTransactionParams(),e=await this._token.contract.approve(this.getCurrent(),b,d);if(e)return await c.voteFor(a,d)}async getVoteBalanceForOptions(){const a=[],b=this._votes[this.getCurrent()],c=await b.getNumberOfOptions();for(let d=0;d<c.toNumber();d++)a.push((await b.getBalanceFor(this._accountAddress,d,this.getTransactionParams())).toNumber());return a}async getVoteBalance(){const a=this._votes[this.getCurrent()];return(await a.getBalanceOf(this._accountAddress,this.getTransactionParams())).toNumber()}getTransactionParams(){return{from:this._accountAddress,gasLimit:toHex(this._gasLimit)}}}var Votes_1=Votes;

var add0x=function(a){return'string'!=typeof a||a.startsWith('0x')?a:'0x'+a};

var callbackToPromise=function(a){return(...b)=>new Promise((c,d)=>a(...b,(a,b)=>{a?d(a):c(b);}))};

var createAsyncWeb3Methods=function(a,...b){return b.reduce((b,c)=>(invariant(a.eth[c],`web3.eth.${c} is not exists`),b[c]=callbackToPromise(a.eth[c].bind(a.eth)),b),{})};

var GethClient_1=class{constructor(a){invariant(a,'provider is not defined'),this.web3=new web3(a),this.provider=a,this.methods={},this.gasPrice=null;}setProvider(a){this.provider=a,this.web3.setProvider(a);}method(a){return this.methods[a]||Object.assign(this.methods,createAsyncWeb3Methods(this.web3,a)),this.methods[a]}async getGasPrice(a){return(a||!this.gasPrice)&&(this.gasPrice=await this.method('getGasPrice')()),this.gasPrice}async sendTransaction(a){const b=await this.method('sendTransaction')(a);return new TransactionResult(b,this,a)}};

const RESULT_KEY={};
const memFunctions=new WeakMap;function memoization(a,...b){const c=[a,...b];let d=memFunctions;for(;c.length;){const a=c.shift();if(d.has(a))d=d.get(a);else{const b=new Map;d.set(a,b),d=b;}}let e;return d.has(RESULT_KEY)?e=d.get(RESULT_KEY):(e=a(...b),d.set(RESULT_KEY,e)),e}function memoize(a){return function(...b){return a(...b)}}var memoization_1={memoization:memoization,memoize:memoize};

const Buffer=buffer.Buffer; const sha3=jsSha3.keccak256;var recoverPrivateKey=function(a,b){let c,d=a.crypto.kdfparams;if('scrypt'===a.crypto.kdf)scryptAsync(b,new Buffer(d.salt,'hex'),{N:d.n,r:d.r,p:d.p,dklen:d.dklen,encoding:'binary'},(a)=>{c=a;});else throw new Error('Unsupported key derivation scheme');const e=new Buffer(a.crypto.ciphertext,'hex'),f=sha3(Buffer.concat([Buffer.from(c.slice(16,32)),e]));if(f!==a.crypto.mac)throw new Error('Key derivation failed - possibly wrong passphrase');const g=browserifyAes.createDecipheriv(a.crypto.cipher,c.slice(0,16),new Buffer(a.crypto.cipherparams.iv,'hex'));let h=Buffer.concat([Buffer.from(g.update(e)),Buffer.from(g.final())]);for(;32>h.length;)h=Buffer.concat([new Buffer([0]),h]);return h.toString('hex')};

var config={development:{contractAddress:{token:"0x225b929916daadd5044d5934936313001f55d8f0",votingRegistry:"0x7acce88d944519878c30245d30c3c7836f3bf2b6"}}};

const environment=config.environment||'development'; const createGethClient=memoization_1.memoize(function(a){return new GethClient_1(a)}); const createProvider=memoization_1.memoize(providerFactory);async function createVotes(a){const b=new Votes_1({account:a,config:config[environment]});return await b.init(),b}function createClient(a,b,c={}){const d=add0x(b),e=createProvider(a),f=createGethClient(e),g={address0x:d,gethClient:f,config:config[environment]};return Object.assign(g,c),{createAccount:async function(){const a=new Account_1(g);return await a.addToken(config[environment].contractAddress.token),a},createTxResult:function(a){return new TransactionResult(a,f)},setPrivateKey:function(a){const b=add0x(a);e.setPrivateKey(b);}}}var blockchainApiJs={createClient,createVotes,utils:{recoverPrivateKey}};

module.exports = blockchainApiJs;
